/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.5 		*/
/*  Created On : 14-abr.-2020 13:49:29 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS banco CASCADE
;

DROP TABLE IF EXISTS Cliente CASCADE
;

DROP TABLE IF EXISTS comision_giro_pagado CASCADE
;

DROP TABLE IF EXISTS Cuenta CASCADE
;

DROP TABLE IF EXISTS cuenta_giro CASCADE
;

DROP TABLE IF EXISTS detalle_activiadad_cuenta CASCADE
;

DROP TABLE IF EXISTS detalle_de_cuenta_giro CASCADE
;

DROP TABLE IF EXISTS estado CASCADE
;

DROP TABLE IF EXISTS giro_pagado CASCADE
;

DROP TABLE IF EXISTS historial_estado_cuenta CASCADE
;

DROP TABLE IF EXISTS notas_cuenta CASCADE
;

DROP TABLE IF EXISTS persona_destinatario CASCADE
;

DROP TABLE IF EXISTS tipo_error CASCADE
;

DROP TABLE IF EXISTS tipo_transaccion CASCADE
;

DROP TABLE IF EXISTS Transaccion CASCADE
;

DROP TABLE IF EXISTS usuario CASCADE
;

/* Create Tables */

CREATE TABLE banco
(
	id_banco varchar(3) NOT NULL,
	nombre_Banco varchar(50) NULL,
	id_transaccion varchar(3) NULL
)
;

CREATE TABLE Cliente
(
	Cedula integer NULL,
	Nombre varchar(50) NULL,
	Apellido varchar(50) NULL,
	Ciudad varchar(50) NULL,
	Departamento varchar(50) NULL,
	Direccion varchar(50) NULL,
	Edad integer NULL,
	"Estado Civil" varchar(50) NULL,
	id_Telefono integer NULL,
	Email varchar(50) NULL
)
;

CREATE TABLE comision_giro_pagado
(
	id_comision_giro_pagado varchar(3) NOT NULL,
	id_giro varchar(3) NULL,
	id_tarifa varchar(3) NULL,
	frecuencia_tarifa varchar(3) NULL,
	estado bigint NULL,
	fecha_inicio date NULL,
	valor_comision_por_giro double precision NULL,
	valor_cuantia double precision NULL,
	id_pago varchar(3) NULL,
	id_giro_pagado varchar(3) NULL
)
;

CREATE TABLE Cuenta
(
	NroCuenta varchar(3) NOT NULL,
	Socio varchar(50) NULL,
	Tipo_de_cuenta varchar(50) NULL,
	"Fecha registro" varchar(50) NULL,
	idUsuario bigint NULL,
	id_cliente bigint NULL,
	id_cuenta_usuario bigint NULL
)
;

CREATE TABLE cuenta_giro
(
	id_cuenta_giro varchar(3) NOT NULL,
	id_persona_recibe varchar(3) NULL,
	id_estado_giro varchar(3) NULL,
	id_giro varchar(3) NULL,
	id_notas varchar(3) NULL,
	valor_giro double precision NULL,
	id_usuario varchar(3) NULL,
	idUsuario varchar(3) NULL,
	id_notas_cuenta varchar(3) NULL
)
;

CREATE TABLE detalle_activiadad_cuenta
(
	id_detalle_actividad_cuenta varchar(3) NOT NULL,
	creado_por varchar(30) NULL,
	id_cuenta varchar(3) NULL,
	fecha_creacion date NULL,
	actualizado_por varchar(30) NULL,
	fecha_actualizacion date NULL,
	id_notas_cuenta varchar(3) NULL
)
;

CREATE TABLE detalle_de_cuenta_giro
(
	id_detalle_cuenta_giro varchar(3) NOT NULL,
	fecha_activacion date NULL,
	valor_del_giro double precision NULL,
	id_moneda_cuenta_giro varchar(3) NULL,
	id_tipo_giro varchar(3) NULL,
	tasa_interes double precision NULL,
	creado_por varchar(30) NULL,
	fecha_creacion date NULL,
	actualizado_por varchar(30) NULL,
	id_cueta_giro varchar(3) NULL,
	id_cuenta_giro varchar(3) NULL
)
;

CREATE TABLE estado
(
	id_estado_de_la_transaccion varchar(3) NOT NULL,
	en_proceso boolean NULL,
	finalizada boolean NULL,
	finalizada_con_error boolean NULL,
	cancelada boolean NULL,
	devuelta boolean NULL,
	en_espera boolean NULL,
	devuelta_finalizada boolean NULL,
	devuelta_con_error boolean NULL
)
;

CREATE TABLE giro_pagado
(
	id_giro_pagado varchar(3) NOT NULL,
	id_giro varchar(3) NULL,
	id_tipo_de_pago varchar(3) NULL,
	valor_a_pagar double precision NULL,
	numero_recibo numeric NULL,
	fecha_envio date NULL,
	fecha_pago date NULL,
	id_banco varchar(3) NULL,
	valor_comision double precision NULL,
	id_cuenta_giro varchar(3) NULL,
	id_comision_giro_pagado varchar(3) NULL
)
;

CREATE TABLE historial_estado_cuenta
(
	id_historial_estado_cuenta varchar(3) NOT NULL,
	id_cuenta varchar(3) NULL,
	nuevo_estado boolean NULL,
	estado_antiguo boolean NULL,
	modificado_por varchar(30) NULL,
	fecha_modificacion date NULL,
	id_pago varchar(3) NULL,
	id_giro_pagado varchar(3) NULL
)
;

CREATE TABLE notas_cuenta
(
	id_notas_cuenta varchar(3) NOT NULL,
	id_cuenta varchar(3) NULL,
	notas varchar(100) NULL,
	fecha_de_la_nota date NULL,
	id_autor varchar(3) NULL,
	id_cuenta_giro varchar(3) NULL
)
;

CREATE TABLE persona_destinatario
(
	id_persona_destinatario varchar(3) NOT NULL,
	nombre varchar(50) NULL,
	id_giro varchar(3) NULL,
	tel_persona_recibe numeric NULL,
	fecha_que_retiro date NULL,
	hora_de_retiro time without time zone NULL,
	numTransaccion numeric NULL,
	num_cuenta_giro numeric NULL
)
;

CREATE TABLE tipo_error
(
	id_tipo_error varchar(3) NOT NULL,
	error_en_la_conexion boolean NULL,
	error_del_banco_no_identificado boolean NULL,
	error_banco_no_tiene_dinero boolean NULL,
	error_desconocido boolean NULL,
	numTransaccion varchar(3) NULL,
	id_Transaccion varchar(3) NULL
)
;

CREATE TABLE tipo_transaccion
(
	id_tipo_transaccion varchar(3) NOT NULL,
	engregar_giro boolean NULL,
	consultar_valor_giro varchar(50) NULL
)
;

CREATE TABLE Transaccion
(
	id_Transaccion varchar(3) NOT NULL,
	id_giro varchar(3) NOT NULL,
	id_banco varchar(3) NOT NULL,
	monto double precision NULL,
	id_tipo_transaccion varchar(3) NULL,
	id_estado varchar(3) NULL,
	id_tipo_error varchar(3) NOT NULL,
	codigoTRANS varchar(30) NULL,
	fecha_inicio date NULL,
	fecha_finalizacion date NULL,
	id_persona_destinatario varchar(3) NULL
)
;

CREATE TABLE usuario
(
	idUsuario varchar(3) NOT NULL,
	cedulaUsuario bigint NULL,
	id_cuenta_giros varchar(3) NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE banco ADD CONSTRAINT PK_banco
	PRIMARY KEY (id_banco)
;

ALTER TABLE comision_giro_pagado ADD CONSTRAINT PK_Table1
	PRIMARY KEY (id_comision_giro_pagado)
;

ALTER TABLE Cuenta ADD CONSTRAINT PK_Cuenta
	PRIMARY KEY (NroCuenta)
;

CREATE INDEX IXFK_Cuenta_cliente ON Cuenta (id_cliente ASC)
;

CREATE INDEX IXFK_Cuenta_cliente_02 ON Cuenta (NroCuenta ASC)
;

CREATE INDEX IXFK_Cuenta_usuario ON Cuenta (idUsuario ASC)
;

ALTER TABLE cuenta_giro ADD CONSTRAINT PK_id_cuenta_giro
	PRIMARY KEY (id_cuenta_giro)
;

ALTER TABLE detalle_activiadad_cuenta ADD CONSTRAINT PK_Table1
	PRIMARY KEY (id_detalle_actividad_cuenta)
;

ALTER TABLE detalle_de_cuenta_giro ADD CONSTRAINT PK_detalle_de_cuenta_giro
	PRIMARY KEY (id_detalle_cuenta_giro)
;

ALTER TABLE estado ADD CONSTRAINT PK_estado_de_la_transaccion
	PRIMARY KEY (id_estado_de_la_transaccion)
;

ALTER TABLE giro_pagado ADD CONSTRAINT PK_id_giro_pagado
	PRIMARY KEY (id_giro_pagado)
;

ALTER TABLE historial_estado_cuenta ADD CONSTRAINT PK_Table1
	PRIMARY KEY (id_historial_estado_cuenta)
;

ALTER TABLE notas_cuenta ADD CONSTRAINT PK_id_notas_cuenta
	PRIMARY KEY (id_notas_cuenta)
;

ALTER TABLE persona_destinatario ADD CONSTRAINT PK_id_cliente
	PRIMARY KEY (id_persona_destinatario)
;

ALTER TABLE tipo_error ADD CONSTRAINT PK_tipo_error
	PRIMARY KEY (id_tipo_error)
;

ALTER TABLE tipo_transaccion ADD CONSTRAINT PK_tipo_de_transaccion
	PRIMARY KEY (id_tipo_transaccion)
;

ALTER TABLE Transaccion ADD CONSTRAINT PK_Transaccion
	PRIMARY KEY (id_Transaccion)
;

ALTER TABLE usuario ADD CONSTRAINT PK_usuario
	PRIMARY KEY (idUsuario)
;

/* Create Foreign Key Constraints */

ALTER TABLE comision_giro_pagado ADD CONSTRAINT FK_comision_giro_pagado_giro_pagado
	FOREIGN KEY (id_giro_pagado) REFERENCES  () ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE Cuenta ADD CONSTRAINT FK_Cuenta_cliente_02
	FOREIGN KEY (NroCuenta) REFERENCES persona_destinatario (id_persona_destinatario) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE cuenta_giro ADD CONSTRAINT FK_cuenta_giro_notas_cuenta
	FOREIGN KEY (id_notas_cuenta) REFERENCES notas_cuenta (id_notas_cuenta) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE cuenta_giro ADD CONSTRAINT FK_cuenta_giro_persona_destinatario
	FOREIGN KEY (id_persona_recibe) REFERENCES persona_destinatario (id_persona_destinatario) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE cuenta_giro ADD CONSTRAINT FK_cuenta_giro_usuario
	FOREIGN KEY (idUsuario) REFERENCES usuario (idUsuario) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE detalle_activiadad_cuenta ADD CONSTRAINT FK_detalle_activiadad_cuenta_notas_cuenta
	FOREIGN KEY (id_notas_cuenta) REFERENCES notas_cuenta (id_notas_cuenta) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE detalle_de_cuenta_giro ADD CONSTRAINT FK_detalle_de_cuenta_giro_cuenta_giro
	FOREIGN KEY (id_cuenta_giro) REFERENCES cuenta_giro (id_cuenta_giro) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE giro_pagado ADD CONSTRAINT FK_giro_pagado_comision_giro_pagado
	FOREIGN KEY (id_comision_giro_pagado) REFERENCES comision_giro_pagado (id_comision_giro_pagado) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE giro_pagado ADD CONSTRAINT FK_giro_pagado_cuenta_giro
	FOREIGN KEY (id_cuenta_giro) REFERENCES  () ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE historial_estado_cuenta ADD CONSTRAINT FK_historial_estado_cuenta_giro_pagado
	FOREIGN KEY (id_giro_pagado) REFERENCES giro_pagado (id_giro_pagado) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE Transaccion ADD CONSTRAINT FK_Transaccion_banco
	FOREIGN KEY (id_banco) REFERENCES banco (id_banco) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE Transaccion ADD CONSTRAINT FK_Transaccion_cliente
	FOREIGN KEY (id_Transaccion) REFERENCES persona_destinatario (id_persona_destinatario) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE Transaccion ADD CONSTRAINT FK_Transaccion_estado_de_la_transaccion
	FOREIGN KEY (id_estado) REFERENCES estado (id_estado_de_la_transaccion) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE Transaccion ADD CONSTRAINT FK_Transaccion_tipo_transaccion
	FOREIGN KEY (id_tipo_transaccion) REFERENCES tipo_transaccion (id_tipo_transaccion) ON DELETE Restrict ON UPDATE Restrict
;
