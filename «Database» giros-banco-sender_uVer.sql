/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.5 		*/
/*  Created On : 15-abr.-2020 11:24:20 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS biometria CASCADE
;

DROP TABLE IF EXISTS cliente CASCADE
;

DROP TABLE IF EXISTS despachador_giros CASCADE
;

DROP TABLE IF EXISTS empleado CASCADE
;

DROP TABLE IF EXISTS forma_pago_estatica CASCADE
;

DROP TABLE IF EXISTS giros CASCADE
;

DROP TABLE IF EXISTS locutorio_sede_espana CASCADE
;

DROP TABLE IF EXISTS negociacion_fletes CASCADE
;

DROP TABLE IF EXISTS pais CASCADE
;

DROP TABLE IF EXISTS tipo_cliente_estatica CASCADE
;

DROP TABLE IF EXISTS tipo_documento CASCADE
;

DROP TABLE IF EXISTS ubicacion_cliente CASCADE
;

DROP TABLE IF EXISTS verificacion_monto_permitido CASCADE
;

/* Drop Sequences */

DROP SEQUENCE  IF EXISTS  Biometria_SEQ  CASCADE
;

/* Create Sequences */

INCREMENT 1
START 0
;

/* Create Tables */

CREATE TABLE biometria
(
	id_biometria numeric NOT NULL,
	Huella_01 bytea NULL,
	id_cliente varchar(50) NULL
)
;

CREATE TABLE cliente
(
	id_cliente varchar(50) NOT NULL,
	id_nacionalidad varchar(50) NULL,
	id_tipo_de_documento varchar(50) NULL,
	nombres varchar(50) NULL,
	apellido_materno varchar(50) NULL,
	apellido_paterno varchar(50) NULL,
	id_tipo_cliente varchar(50) NULL,
	id_tipo_documento varchar(2) NULL,
	id_destinatario bigint NULL,
	id_pais varchar(3) NULL,
	id_giro varchar(50) NULL,
	razon_social varchar(50) NULL
)
;

CREATE TABLE despachador_giros
(
	id_despachador_giros bigint NOT NULL,
	hora_recep_giro time without time zone NULL,
	fecha_recep_giro date NULL,
	id_giro bigint NULL,
	comision_giro varchar(50) NULL,
	valor_giro varchar(50) NULL,
	id_su_red bigint NULL,
	id_matrix_giros_y_servicios varchar(50) NULL,
	id_efectivo_ltda varchar(50) NULL,
	id_servientrega varchar(50) NULL,
	id_efecty varchar(50) NULL,
	id_super_giros varchar(50) NULL,
	id_movil_red varchar(50) NULL,
	id_invercosta varchar(50) NULL,
	id_coopetran varchar(50) NULL,
	id_giros_al_instante_sin varchar(50) NULL,
	id_banco_avvillas bigint NULL,
	id_despachador bigint NULL
)
;

CREATE TABLE empleado
(
	id_empleado varchar(2) NOT NULL,
	nombre varchar(50) NULL,
	id_giros varchar(50) NULL,
	tipo_documento varchar(50) NULL,
	num_documento_emp bigint NULL
)
;

CREATE TABLE forma_pago_estatica
(
	id_Forma_de_Pago varchar(3) NOT NULL,
	cuenta_ahorros bigint NULL,
	tarjeta_credito bigint NULL,
	cheque boolean NULL,
	efectivo boolean NULL
)
;

CREATE TABLE giros
(
	id_giros varchar(3) NOT NULL,
	id_cliente varchar(3) NULL,
	id_origen varchar(3) NULL,
	Fecha_Giro date NULL,
	Costo_Giro double precision NULL,
	id_destino varchar(3) NULL,
	id_pais varchar(3) NULL,
	Id_locutorio varchar(3) NULL,
	id_administrador varchar(3) NULL,
	id_empleado varchar(2) NULL,
	id_verificar_monto_permitido varchar(3) NULL,
	id_verficar_monto varchar(3) NULL,
	id_Forma_de_Pago varchar(3) NULL
)
;

CREATE TABLE locutorio_sede_espana
(
	Id_locutorio varchar(3) NOT NULL,
	id_giro varchar(50) NULL,
	Nombre_locutorio varchar(50) NULL,
	email_locutorio varchar(50) NULL,
	Telefono bigint NULL,
	Direccion_locutorio varchar(50) NULL,
	id_comprobante_recepcion_giro varchar(3) NULL,
	id_giros varchar(50) NULL
)
;

CREATE TABLE negociacion_fletes
(
	id_Negociacion varchar(3) NOT NULL,
	cod_negociacion numeric(20) NULL,
	comi_broker_que_envia numeric(20) NULL,
	comi_banco numeric(20) NULL,
	comi_broker_recepcion numeric NULL,
	tax_pais_emisor numeric NULL,
	FECHA_VIGENCIA_INICIAL date NULL,
	FECHA_VIGENCIA_FINAL date NULL
)
;

CREATE TABLE pais
(
	id_pais varchar(3) NOT NULL,
	nombre varchar(30) NULL,
	gentilicio_nal varchar(30) NULL,
	id_nacionalidad varchar(50) NULL
)
;

CREATE TABLE tipo_cliente_estatica
(
	id_tipo_cliente varchar(50) NOT NULL,
	nombre varchar(50) NULL
)
;

CREATE TABLE tipo_documento
(
	id_tipo_documento varchar(2) NOT NULL,
	nombre_documento varchar(50) NULL
)
;

CREATE TABLE ubicacion_cliente
(
	Nombre varchar(50) NULL,
	Direccion_Actual varchar(50) NULL,
	id_Cliente varchar(50) NULL,
	telefono bigint NULL,
	id_ubicacion bigint NOT NULL,
	email varchar(50) NULL,
	fecha_ultimo_camkbio_residencia date NULL
)
;

CREATE TABLE verificacion_monto_permitido
(
	id_cliente varchar(3) NOT NULL,
	id_giro varchar(50) NULL,
	id_giros varchar(50) NULL,
	verficar_monto_permitido boolean NULL,
	valor_monto_permitido double precision NULL,
	id_verficar_monto varchar(3) NOT NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE biometria ADD CONSTRAINT PK_biometria
	PRIMARY KEY (id_biometria)
;

SELECT NEXT BAN('BIOMETRIA_SEQ')
;

ALTER TABLE cliente ADD CONSTRAINT PK_id_cliente
	PRIMARY KEY (id_cliente)
;

ALTER TABLE despachador_giros ADD CONSTRAINT PK_id_despachador_giros
	PRIMARY KEY (id_despachador_giros)
;

CREATE INDEX IXFK_despachador_giros_banco_avvillas_BAVICOBBXXX ON despachador_giros (id_banco_avvillas ASC)
;

CREATE INDEX IXFK_despachador_giros_banco_avvillas_BAVICOBBXXX_02 ON despachador_giros (id_despachador ASC)
;

ALTER TABLE empleado ADD CONSTRAINT "PK id_empledo"
	PRIMARY KEY (id_empleado)
;

ALTER TABLE forma_pago_estatica ADD CONSTRAINT PK_Forma_Pago
	PRIMARY KEY (id_Forma_de_Pago)
;

ALTER TABLE giros ADD CONSTRAINT PK_id_giro
	PRIMARY KEY (id_giros)
;

ALTER TABLE locutorio_sede_espana ADD CONSTRAINT PK_Locutorio
	PRIMARY KEY (Id_locutorio)
;

CREATE INDEX IXFK_locutorio_espana_giros ON locutorio_sede_espana ()
;

CREATE INDEX IXFK_Locutorio_giros ON locutorio_sede_espana ()
;

CREATE INDEX IXFK_locutorio_sede_espana_giros ON locutorio_sede_espana (id_giros ASC)
;

ALTER TABLE negociacion_fletes ADD CONSTRAINT PK_Negociacion
	PRIMARY KEY (id_Negociacion)
;

ALTER TABLE pais ADD CONSTRAINT PK_pais
	PRIMARY KEY (id_pais)
;

ALTER TABLE tipo_cliente_estatica ADD CONSTRAINT PK_Tipo_de_Cliente
	PRIMARY KEY (id_tipo_cliente)
;

ALTER TABLE tipo_documento ADD CONSTRAINT PK_tipo_documento
	PRIMARY KEY (id_tipo_documento)
;

ALTER TABLE ubicacion_cliente ADD CONSTRAINT PK_id_ubicacion
	PRIMARY KEY (id_ubicacion)
;

ALTER TABLE verificacion_monto_permitido ADD CONSTRAINT PK_VerificacionMontoDeseado
	PRIMARY KEY (id_verficar_monto)
;

/* Create Foreign Key Constraints */

ALTER TABLE biometria ADD CONSTRAINT FK_biometria_cliente
	FOREIGN KEY (id_cliente) REFERENCES cliente (id_cliente) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE cliente ADD CONSTRAINT FK_cliente_pais
	FOREIGN KEY (id_pais) REFERENCES pais (id_pais) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE cliente ADD CONSTRAINT FK_cliente_tipo_documento
	FOREIGN KEY (id_tipo_documento) REFERENCES tipo_documento (id_tipo_documento) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE giros ADD CONSTRAINT FK_giros_cliente
	FOREIGN KEY (id_cliente) REFERENCES  () ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE giros ADD CONSTRAINT FK_giros_empleado
	FOREIGN KEY (id_empleado) REFERENCES empleado (id_empleado) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE giros ADD CONSTRAINT FK_giros_forma_pago_estatica
	FOREIGN KEY (id_Forma_de_Pago) REFERENCES forma_pago_estatica (id_Forma_de_Pago) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE giros ADD CONSTRAINT FK_giros_locutorio_sede_espana
	FOREIGN KEY (Id_locutorio) REFERENCES locutorio_sede_espana (Id_locutorio) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE ubicacion_cliente ADD CONSTRAINT FK_ubicacion_id_cliente
	FOREIGN KEY (id_Cliente) REFERENCES cliente (id_cliente) ON DELETE Restrict ON UPDATE Restrict
;
